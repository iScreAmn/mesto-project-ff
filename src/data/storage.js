export function saveProfileData(updatedFields) {
  const existing = loadProfileData() || {};
  const merged = { ...existing, ...updatedFields };
  localStorage.setItem('profileData', JSON.stringify(merged));
}

export function loadProfileData() {
  const data = localStorage.getItem('profileData');
  return data ? JSON.parse(data) : null;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–∑–º–µ—Ä–∞ localStorage
function getStorageSize() {
  let total = 0;
  for (let key in localStorage) {
    if (localStorage.hasOwnProperty(key)) {
      total += localStorage[key].length + key.length;
    }
  }
  return total;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ –º–µ—Å—Ç–∞ (–≤ –±–∞–π—Ç–∞—Ö)
function getAvailableSpace() {
  const maxSize = 5 * 1024 * 1024; // 5MB - —Ç–∏–ø–∏—á–Ω—ã–π –ª–∏–º–∏—Ç
  const currentSize = getStorageSize();
  return maxSize - currentSize;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Å—Ç–∞—Ä—ã—Ö –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –Ω–µ—Ö–≤–∞—Ç–∫–µ –º–µ—Å—Ç–∞
function cleanupOldData() {
  console.log('üßπ –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏—è –º–µ—Å—Ç–∞...');
  
  // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –ª–∞–π–∫–∏ (–æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 50)
  const likeKeys = Object.keys(localStorage).filter(key => key.startsWith('likes_'));
  if (likeKeys.length > 50) {
    const keysToRemove = likeKeys.slice(0, likeKeys.length - 50);
    keysToRemove.forEach(key => localStorage.removeItem(key));
    console.log(`üóëÔ∏è –£–¥–∞–ª–µ–Ω–æ ${keysToRemove.length} —Å—Ç–∞—Ä—ã—Ö –∑–∞–ø–∏—Å–µ–π –ª–∞–π–∫–æ–≤`);
  }
  
  // –û—á–∏—â–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É –µ—Å–ª–∏ –æ–Ω–∞ —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–∞—è
  const trashCards = loadTrashCards();
  if (trashCards.length > 10) {
    const reducedTrash = trashCards.slice(0, 10);
    saveTrashCards(reducedTrash);
    console.log(`üóëÔ∏è –°–æ–∫—Ä–∞—â–µ–Ω–∞ –∫–æ—Ä–∑–∏–Ω–∞ –¥–æ 10 —ç–ª–µ–º–µ–Ω—Ç–æ–≤`);
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–∂–∞—Ç–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π (—É–º–µ–Ω—å—à–µ–Ω–∏–µ –∫–∞—á–µ—Å—Ç–≤–∞)
function compressBase64Image(base64String, quality = 0.7) {
  return new Promise((resolve) => {
    const canvas = document.createElement('canvas');
    const ctx = canvas.getContext('2d');
    const img = new Image();
    
    img.onload = function() {
      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã
      const maxWidth = 800;
      const maxHeight = 600;
      
      let { width, height } = img;
      
      // –ü—Ä–æ–ø–æ—Ä—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ —É–º–µ–Ω—å—à–µ–Ω–∏–µ
      if (width > maxWidth || height > maxHeight) {
        const ratio = Math.min(maxWidth / width, maxHeight / height);
        width *= ratio;
        height *= ratio;
      }
      
      canvas.width = width;
      canvas.height = height;
      
      ctx.drawImage(img, 0, 0, width, height);
      
      // –°–∂–∏–º–∞–µ–º —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º –∫–∞—á–µ—Å—Ç–≤–æ–º
      const compressedBase64 = canvas.toDataURL('image/jpeg', quality);
      resolve(compressedBase64);
    };
    
    img.src = base64String;
  });
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–∞—Ä—Ç–æ—á–∫–∞–º–∏
export function saveCards(cards) {
  try {
    const dataToSave = JSON.stringify(cards);
    const dataSize = dataToSave.length;
    
    console.log(`üìä –†–∞–∑–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: ${(dataSize / 1024).toFixed(1)} KB`);
    console.log(`üìä –î–æ—Å—Ç—É–ø–Ω–æ –º–µ—Å—Ç–∞: ${(getAvailableSpace() / 1024).toFixed(1)} KB`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ–º–µ—Å—Ç—è—Ç—Å—è –ª–∏ –¥–∞–Ω–Ω—ã–µ
    if (dataSize > getAvailableSpace()) {
      console.log('‚ö†Ô∏è –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–µ—Å—Ç–∞, –≤—ã–ø–æ–ª–Ω—è–µ–º –æ—á–∏—Å—Ç–∫—É...');
      cleanupOldData();
      
      // –ï—Å–ª–∏ –≤—Å–µ –µ—â–µ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –º–µ—Å—Ç–∞, —Å–∂–∏–º–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
      if (dataSize > getAvailableSpace()) {
        console.log('üóúÔ∏è –°–∂–∏–º–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è —ç–∫–æ–Ω–æ–º–∏–∏ –º–µ—Å—Ç–∞...');
        // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É —Å–∂–∞—Ç–∏—è, –Ω–æ —ç—Ç–æ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è
        // –ü–æ–∫–∞ –ø—Ä–æ—Å—Ç–æ –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞—Ä—Ç–æ—á–µ–∫
        const maxCards = 20;
        if (cards.length > maxCards) {
          cards = cards.slice(0, maxCards);
          console.log(`üìâ –û–≥—Ä–∞–Ω–∏—á–µ–Ω–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞—Ä—Ç–æ—á–µ–∫ –¥–æ ${maxCards}`);
        }
      }
    }
    
    localStorage.setItem('userCards', JSON.stringify(cards));
    console.log(`üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ ${cards.length} –∫–∞—Ä—Ç–æ—á–µ–∫ –≤ localStorage`);
  } catch (error) {
    console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫–∞—Ä—Ç–æ—á–∫–∏ –≤ localStorage:', error);
    
    if (error.name === 'QuotaExceededError') {
      // –≠–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞
      console.log('üö® –≠–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö...');
      cleanupOldData();
      
      // –ü—Ä–æ–±—É–µ–º —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 –∫–∞—Ä—Ç–æ—á–µ–∫
      try {
        const limitedCards = cards.slice(0, 10);
        localStorage.setItem('userCards', JSON.stringify(limitedCards));
        console.log(`üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ ${limitedCards.length} –∫–∞—Ä—Ç–æ—á–µ–∫ –ø–æ—Å–ª–µ —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–π –æ—á–∏—Å—Ç–∫–∏`);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        showStorageWarning();
      } catch (secondError) {
        console.error('‚ùå –î–∞–∂–µ —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å:', secondError);
        showStorageCriticalError();
      }
    }
  }
}

export function loadCards() {
  try {
    const data = localStorage.getItem('userCards');
    const cards = data ? JSON.parse(data) : [];
    console.log(`üìÇ –ó–∞–≥—Ä—É–∂–µ–Ω–æ ${cards.length} –∫–∞—Ä—Ç–æ—á–µ–∫ –∏–∑ localStorage`);
    return cards;
  } catch (error) {
    console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–∞—Ä—Ç–æ—á–∫–∏ –∏–∑ localStorage:', error);
    return [];
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –∫–∞—Ä—Ç–æ—á–µ–∫
export function clearCards() {
  localStorage.removeItem('userCards');
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–æ—Ä–∑–∏–Ω–æ–π
export function saveTrashCards(cards) {
  try {
    localStorage.setItem('trashCards', JSON.stringify(cards));
    console.log(`üóëÔ∏è –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ ${cards.length} –∫–∞—Ä—Ç–æ—á–µ–∫ –≤ –∫–æ—Ä–∑–∏–Ω–µ`);
  } catch (error) {
    console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É –≤ localStorage:', error);
    
    if (error.name === 'QuotaExceededError') {
      // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É –¥–æ 5 —ç–ª–µ–º–µ–Ω—Ç–æ–≤
      const limitedCards = cards.slice(0, 5);
      try {
        localStorage.setItem('trashCards', JSON.stringify(limitedCards));
        console.log(`üóëÔ∏è –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ ${limitedCards.length} –∫–∞—Ä—Ç–æ—á–µ–∫ –≤ –∫–æ—Ä–∑–∏–Ω–µ –ø–æ—Å–ª–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è`);
      } catch (secondError) {
        console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –¥–∞–∂–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—É—é –∫–æ—Ä–∑–∏–Ω—É:', secondError);
      }
    }
  }
}

export function loadTrashCards() {
  try {
    const data = localStorage.getItem('trashCards');
    const cards = data ? JSON.parse(data) : [];
    console.log(`üìÇ –ó–∞–≥—Ä—É–∂–µ–Ω–æ ${cards.length} –∫–∞—Ä—Ç–æ—á–µ–∫ –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã`);
    return cards;
  } catch (error) {
    console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É –∏–∑ localStorage:', error);
    return [];
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –∫–æ—Ä–∑–∏–Ω—ã
export function clearTrashCards() {
  localStorage.removeItem('trashCards');
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø–æ–∫–∞–∑–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
function showStorageWarning() {
  // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å toast —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∏–ª–∏ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
  console.log('‚ö†Ô∏è –•—Ä–∞–Ω–∏–ª–∏—â–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ, –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ —Å—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ –±—ã–ª–∏ —É–¥–∞–ª–µ–Ω—ã');
  
  // –ü—Ä–æ—Å—Ç–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ alert (–º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –±–æ–ª–µ–µ –∫—Ä–∞—Å–∏–≤–æ–µ)
  if (window.confirm('–•—Ä–∞–Ω–∏–ª–∏—â–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ. –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Å—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ –±—ã–ª–∏ —É–¥–∞–ª–µ–Ω—ã. –•–æ—Ç–∏—Ç–µ –æ—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É –¥–ª—è –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏—è –º–µ—Å—Ç–∞?')) {
    clearTrashCards();
    console.log('üóëÔ∏è –ö–æ—Ä–∑–∏–Ω–∞ –æ—á–∏—â–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º');
  }
}

function showStorageCriticalError() {
  alert('–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–µ—Ç—Å—è —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—á–∏—Å—Ç–∏—Ç—å –±—Ä–∞—É–∑–µ—Ä –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –º–µ–Ω—å—à–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π.');
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ö—Ä–∞–Ω–∏–ª–∏—â–µ–º
export { getStorageSize, getAvailableSpace, cleanupOldData, compressBase64Image };