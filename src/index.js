import "./pages/index.css";
import "./blocks/theme/theme.css";
import "./blocks/auth/auth.css";
import avatarImage from "./images/avatar.jpg";
import mestoImage from "./images/mesto_image.png";
import { initialCards as importedInitialCards } from "./components/cards.js"; // –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º –¥–ª—è —è—Å–Ω–æ—Å—Ç–∏
import { openModal, closeModal } from "./components/modal.js";
import { initThemeToggle } from "./components/theme.js";
import { initI18n, switchLanguage } from "./components/i18n.js";
import { initAuth, isAuthenticated } from "./components/auth.js";
import { initFileUpload, getImageBase64, hasFile, resetFileUpload } from "./components/file-upload.js";
import { lockScroll, unlockScroll } from "./components/scroll-lock.js";
import '@fortawesome/fontawesome-free/css/all.css';
import {
  createCardElement,
  createTrashCardElement,
  handleLikeCard,
} from "./components/card.js";
import { saveProfileData, loadProfileData, saveCards, loadCards, saveTrashCards, loadTrashCards, getStorageSize, getAvailableSpace, cleanupOldData, clearTrashCards } from './data/storage.js';
import { initializePopupImageHandlers, openImagePopup } from './components/popup-image.js';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫–∏ –∏–∑ localStorage, –µ—Å–ª–∏ –µ—Å—Ç—å, –∏–Ω–∞—á–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ
const savedCards = loadCards();
let currentCards = savedCards.length > 0 ? savedCards : [...importedInitialCards];

// –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É
let trashCards = loadTrashCards();

document.addEventListener("DOMContentLoaded", async () => {
  if (!localStorage.getItem('userId')) {
    localStorage.setItem('userId', 'user_' + Math.random().toString(36).substr(2, 9));
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
  const storageSize = getStorageSize();
  const availableSpace = getAvailableSpace();
  console.log(`üìä –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ localStorage: ${(storageSize / 1024).toFixed(1)} KB`);
  console.log(`üìä –î–æ—Å—Ç—É–ø–Ω–æ –º–µ—Å—Ç–∞: ${(availableSpace / 1024).toFixed(1)} KB`);
  
  // –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–∞–µ–º –µ—Å–ª–∏ –º–µ—Å—Ç–∞ –º–∞–ª–æ
  if (availableSpace < 1024 * 1024) { // –ú–µ–Ω—å—à–µ 1MB
    console.warn('‚ö†Ô∏è –ú–∞–ª–æ –º–µ—Å—Ç–∞ –≤ localStorage, —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –æ—á–∏—Å—Ç–∫–∞');
  }
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–∏—Å—Ç–µ–º—ã
  initThemeToggle();
  await initI18n();
  initAuth();
  
  // –°–¥–µ–ª–∞–µ–º switchLanguage –≥–ª–æ–±–∞–ª—å–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–µ–π –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∏–∑ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª–µ–π
  window.switchLanguage = switchLanguage;

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –¥–ª—è –ø–æ–ø–∞–ø–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
  const popupImage = document.querySelector('.popup_type_image');
  if (popupImage) {
    initializePopupImageHandlers(popupImage);
  }

  // –î–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –∫–Ω–æ–ø–∫—É "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å" –≤ —Ñ–æ—Ä–º–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è, –ø–æ–∫–∞ –≤—Å–µ –ø–æ–ª—è –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã
  const formEdit = document.querySelector('.popup_type_edit .popup__form');
  const saveProfileBtn = formEdit?.querySelector('.popup__button');
  const inputsEdit = formEdit ? Array.from(formEdit.querySelectorAll('input[required]')) : [];

  function toggleEditButton() {
    const allFilled = inputsEdit.every(input => input.value.trim() !== "");
    if (saveProfileBtn) saveProfileBtn.disabled = !allFilled;
    if (saveProfileBtn) saveProfileBtn.classList.toggle('disabled', !allFilled);
  }

  inputsEdit.forEach(input => {
    input.addEventListener('input', toggleEditButton);
  });
  toggleEditButton();

  // –î–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –∫–Ω–æ–ø–∫—É "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å" –≤ —Ñ–æ—Ä–º–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–∞—Ä—Ç–æ—á–∫–∏
  const formNew = document.querySelector('.popup_type_new-card .popup__form');
  const saveCardBtn = formNew?.querySelector('.popup__button');
  const inputsNew = formNew ? Array.from(formNew.querySelectorAll('input[required]')) : [];

  function toggleNewButton() {
    const nameInput = formNew?.querySelector('input[name="place-name"]');
    const imageInput = formNew?.querySelector('input[name="image-file"]');
    
    const nameValid = nameInput?.value.trim() !== "";
    const imageValid = imageInput?.files.length > 0;
    const allValid = nameValid && imageValid;
    
    if (saveCardBtn) saveCardBtn.disabled = !allValid;
    if (saveCardBtn) saveCardBtn.classList.toggle('disabled', !allValid);
  }

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—è
  const nameInput = formNew?.querySelector('input[name="place-name"]');
  if (nameInput) {
    nameInput.addEventListener('input', toggleNewButton);
  }
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Ñ–∞–π–ª–æ–≤–æ–≥–æ –ø–æ–ª—è —É–±—Ä–∞–Ω - –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤—Å—Ç—Ä–æ–µ–Ω–Ω–∞—è –ª–æ–≥–∏–∫–∞ –≤ file-upload.js
  
  toggleNewButton();

  // –î–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –∫–Ω–æ–ø–∫—É "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å" –≤ —Ñ–æ—Ä–º–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∞–≤–∞—Ç–∞—Ä–∞
  const formAvatar = document.querySelector('.popup_type_avatar .popup__form');
  const saveAvatarBtn = formAvatar?.querySelector('.popup__button');

  function toggleAvatarButton() {
    const avatarInput = formAvatar?.querySelector('input[name="avatar-file"]');
    const avatarValid = avatarInput?.files.length > 0;
    
    if (saveAvatarBtn) saveAvatarBtn.disabled = !avatarValid;
    if (saveAvatarBtn) saveAvatarBtn.classList.toggle('disabled', !avatarValid);
  }

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Ñ–∞–π–ª–æ–≤–æ–≥–æ –ø–æ–ª—è –∞–≤–∞—Ç–∞—Ä–∞ —É–±—Ä–∞–Ω - –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤—Å—Ç—Ä–æ–µ–Ω–Ω–∞—è –ª–æ–≥–∏–∫–∞ –≤ file-upload.js
  
  toggleAvatarButton();

  // –°—Ç–∏–ª–∏–∑–∞—Ü–∏—è –æ—Ç–∫–ª—é—á—ë–Ω–Ω–æ–π –∫–Ω–æ–ø–∫–∏ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
  if (saveProfileBtn) {
    saveProfileBtn.classList.toggle('disabled', saveProfileBtn.disabled);
  }
  if (saveCardBtn) {
    saveCardBtn.classList.toggle('disabled', saveCardBtn.disabled);
  }
  if (saveAvatarBtn) {
    saveAvatarBtn.classList.toggle('disabled', saveAvatarBtn.disabled);
  }

  const savedProfile = loadProfileData();
  if (savedProfile) {
    const profileTitle = document.querySelector(".profile__title");
    const profileDescription = document.querySelector(".profile__description");
    if (savedProfile.name) profileTitle.textContent = savedProfile.name;
    if (savedProfile.description) profileDescription.textContent = savedProfile.description;
    if (savedProfile.avatar) {
      profileImageDiv.style.backgroundImage = `url(${savedProfile.avatar})`;
    }
  }

  // underline nav/profile/theme
  const underlineTargets = [
    ...document.querySelectorAll(".nav-btn-profile"),
  ];

  underlineTargets.forEach((btn) => {
    btn.addEventListener("click", () => {
      underlineTargets.forEach((el) => el.classList.remove("active"));
      btn.classList.add("active");
    });
  });

  // profile tab switching with smooth animation
  const profileTabs = [
    document.querySelector('.profile-tab-image'),
    document.querySelector('.profile-tab-favorites')
  ];

  // Set default active tab and reset to images on page load
  const profileTabImage = document.querySelector('.profile-tab-image');
  const profileTabFavs = document.querySelector('.profile-tab-favorites');
  
  // –í—Å–µ–≥–¥–∞ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –Ω–∞ –≤–∫–ª–∞–¥–∫—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  if (profileTabImage && profileTabFavs) {
    profileTabFavs.classList.remove('active');
    profileTabImage.classList.add('active');
  }

  profileTabs.forEach(tab => {
    if (!tab) return;
    tab.addEventListener('click', (e) => {
      e.preventDefault();
      
      // –£–±–∏—Ä–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å —Å–æ –≤—Å–µ—Ö –≤–∫–ª–∞–¥–æ–∫
      profileTabs.forEach(t => t.classList.remove('active'));
      
      // –î–æ–±–∞–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å –∫ –Ω–∞–∂–∞—Ç–æ–π –≤–∫–ª–∞–¥–∫–µ —Å—Ä–∞–∑—É
      tab.classList.add('active');
    });
  });

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
  if (isAuthenticated()) {
    initFileUpload();
    
    // –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–∞—Ä—Ç–æ—á–µ–∫ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ,
    // –∫–æ–≥–¥–∞ DOM –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ –≥–æ—Ç–æ–≤ –∏ currentCards –¥–æ—Å—Ç—É–ø–Ω–∞.
    renderCards(currentCards, false, true);
    
    // –ï—Å–ª–∏ —ç—Ç–æ –ø–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫ (–∫–∞—Ä—Ç–æ—á–∫–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ –Ω–∞—á–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö), —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Ö
    if (savedCards.length === 0 && currentCards.length > 0) {
      saveCards(currentCards);
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ —Ñ–æ—Ä–º –ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    toggleNewButton();
    toggleAvatarButton();
  }
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ footer –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª–µ–π —è–∑—ã–∫–∞
window.reinitFooterLanguageSwitchers = function() {
  const footerSwitches = document.querySelectorAll('.footer__language-switch');
  
  footerSwitches.forEach(switchElement => {
    const dropdownBtn = switchElement.querySelector('.footer__lang-dropdown-btn');
    const options = switchElement.querySelectorAll('.footer__lang-option');
    
    // –ö–ª–æ–Ω–∏—Ä—É–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Å—Ç–∞—Ä—ã—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
    if (dropdownBtn) {
      const newDropdownBtn = dropdownBtn.cloneNode(true);
      dropdownBtn.parentNode.replaceChild(newDropdownBtn, dropdownBtn);
      
      newDropdownBtn.addEventListener('click', (e) => {
        e.stopPropagation();
        switchElement.classList.toggle('open');
      });
    }
    
    options.forEach(option => {
      const newOption = option.cloneNode(true);
      option.parentNode.replaceChild(newOption, option);
      
      newOption.addEventListener('click', (e) => {
        e.stopPropagation();
        const language = newOption.getAttribute('data-lang');
        switchLanguage(language);
        switchElement.classList.remove('open');
      });
    });
  });
  
  // –ü–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–∫—Ä—ã—Ç–∏—è
  document.addEventListener('click', () => {
    footerSwitches.forEach(switchElement => {
      switchElement.classList.remove('open');
    });
  });
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –≥–ª–∞–≤–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –ø–æ—Å–ª–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
window.initMainAppContent = function() {
  // –§–∞–π–ª–æ–≤—ã–µ –∑–∞–≥—Ä—É–∑–∫–∏ —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã –≤ –æ—Å–Ω–æ–≤–Ω–æ–º DOMContentLoaded
  
  // –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–∞—Ä—Ç–æ—á–µ–∫ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
  renderCards(currentCards, false, true);
  
  // –ï—Å–ª–∏ —ç—Ç–æ –ø–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫ (–∫–∞—Ä—Ç–æ—á–∫–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ –Ω–∞—á–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö), —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Ö
  const savedCards = loadCards();
  if (savedCards.length === 0 && currentCards.length > 0) {
    saveCards(currentCards);
  }
  
  // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ —Ñ–æ—Ä–º
  const toggleNewButton = () => {
    const formNew = document.querySelector('.popup_type_new-card .popup__form');
    const saveCardBtn = formNew?.querySelector('.popup__button');
    const nameInput = formNew?.querySelector('input[name="place-name"]');
    const imageInput = formNew?.querySelector('input[name="image-file"]');
    
    const nameValid = nameInput?.value.trim() !== "";
    const imageValid = imageInput?.files.length > 0;
    const allValid = nameValid && imageValid;
    
    if (saveCardBtn) saveCardBtn.disabled = !allValid;
    if (saveCardBtn) saveCardBtn.classList.toggle('disabled', !allValid);
  };
  
  const toggleAvatarButton = () => {
    const formAvatar = document.querySelector('.popup_type_avatar .popup__form');
    const saveAvatarBtn = formAvatar?.querySelector('.popup__button');
    const avatarInput = formAvatar?.querySelector('input[name="avatar-file"]');
    const avatarValid = avatarInput?.files.length > 0;
    
    if (saveAvatarBtn) saveAvatarBtn.disabled = !avatarValid;
    if (saveAvatarBtn) saveAvatarBtn.classList.toggle('disabled', !avatarValid);
  };
  
  toggleNewButton();
  toggleAvatarButton();
  
  // –î–µ–ª–∞–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –≥–ª–æ–±–∞–ª—å–Ω–æ –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏
  window.toggleNewButton = toggleNewButton;
  window.toggleAvatarButton = toggleAvatarButton;
};

// –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–∞–∫ background-image
const profileImageDiv = document.querySelector(".profile__image");
profileImageDiv.style.backgroundImage = `url(${avatarImage})`;

// –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è auth mockup
const mestoMockupImage = document.querySelector("#mesto-mockup-image");
if (mestoMockupImage) {
  mestoMockupImage.src = mestoImage;
}

// DOM-—ç–ª–µ–º–µ–Ω—Ç—ã
const placesList = document.querySelector(".places__list");
const profileEditButton = document.querySelector(".profile__edit-button");
const profileAddButton = document.querySelector(".profile__add-button");
const profileImage = document.querySelector(".profile__image");

const popupEditProfile = document.querySelector(".popup_type_edit");
const popupNewCard = document.querySelector(".popup_type_new-card");
const popupImage = document.querySelector(".popup_type_image");
const popupAvatar = document.querySelector(".popup_type_avatar");
const popupDelete = document.querySelector(".popup_type_delete");

const closeButtonEditProfile = popupEditProfile.querySelector(".popup__close");
const closeButtonNewCard = popupNewCard.querySelector(".popup__close");
const closeButtonImage = popupImage
  ? popupImage.querySelector(".popup__close")
  : null;
const closeButtonAvatar = popupAvatar.querySelector(".popup__close");
const closeButtonDelete = popupDelete.querySelector(".popup__close");
const burgerButton = document.querySelector(".navigation__button");
const dropdownOverlay = document.querySelector(".dropdown-overlay");
const dropdownClose = document.querySelector(".dropdown-close");
const navItemProfile = document.querySelector(".nav-item-profile");
let cardToDelete = null; // –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–∞—Ä—Ç–æ—á–∫–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è –∫–∞—Ä—Ç–æ—á–∫–∏ –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ –Ω–∞ –∞–∫—Ç–∏–≤–Ω–æ–π –≤–∫–ª–∞–¥–∫–µ "–ò–∑–±—Ä–∞–Ω–Ω–æ–µ"
function handleUnfavoriteFromActiveTab(cardLink) {
  currentCards = currentCards.filter(card => card.link !== cardLink);
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∫–∞—Ä—Ç–æ—á–µ–∫ –≤ localStorage
  saveCards(currentCards);
  
  // –ï—Å–ª–∏ –∞–∫—Ç–∏–≤–Ω–∞ –≤–∫–ª–∞–¥–∫–∞ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ, –ø–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º –µ—ë
  const isFavoritesTabActive = profileTabFavorites?.classList.contains('active');
  if (isFavoritesTabActive) {
    const favLinks = JSON.parse(localStorage.getItem('favorites')) || [];
    const favoriteCards = currentCards.filter(card => favLinks.includes(card.link));
    renderCards(favoriteCards, true);
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏ (–æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ)
function handleCardDeleteRequest(cardElementDOM) {
  cardToDelete = cardElementDOM; // cardElementDOM - —ç—Ç–æ .places__item
  window.cardToDelete = cardElementDOM; // –¢–∞–∫–∂–µ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ window –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
  openModal(popupDelete);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–∞—Ä—Ç–æ—á–µ–∫ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
function renderCards(cardsToRender, isFromFavorites = false, isMainTab = false) {
  placesList.innerHTML = ''; // –û—á–∏—â–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–µ—Ä–µ–¥ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–æ–º
  
  // –ï—Å–ª–∏ —ç—Ç–æ –≤–∫–ª–∞–¥–∫–∞ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ –∏ –∫–∞—Ä—Ç–æ—á–µ–∫ –Ω–µ—Ç, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä
  if (isFromFavorites && cardsToRender.length === 0) {
    const emptyPlaceholder = document.createElement('div');
    emptyPlaceholder.className = 'favorites-empty-placeholder';
    emptyPlaceholder.innerHTML = `
      <i class="fa-regular fa-bookmark favorites-empty-icon"></i>
      <p class="favorites-empty-text">–î–æ–±–∞–≤—å—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ</p>
    `;
    placesList.appendChild(emptyPlaceholder);
    return;
  }
  
  // –ï—Å–ª–∏ —ç—Ç–æ –æ—Å–Ω–æ–≤–Ω–∞—è –≤–∫–ª–∞–¥–∫–∞ –∏ –∫–∞—Ä—Ç–æ—á–µ–∫ –Ω–µ—Ç, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä —Å –∫–Ω–æ–ø–∫–æ–π –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
  if (isMainTab && cardsToRender.length === 0) {
    const emptyPlaceholder = document.createElement('div');
    emptyPlaceholder.className = 'main-empty-placeholder';
    emptyPlaceholder.innerHTML = `
      <i class="fa-regular fa-images main-empty-icon"></i>
      <p class="main-empty-text">–ù–∞—á–Ω–∏—Ç–µ –¥–æ–±–∞–≤–ª—è—Ç—å –≤–∞—à –∫–æ–Ω—Ç–µ–Ω—Ç</p>
      <button class="main-empty-add-button" type="button">
        <i class="fa-solid fa-plus"></i>
      </button>
    `;
    placesList.appendChild(emptyPlaceholder);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –Ω–∞ –∫–Ω–æ–ø–∫—É –≤ –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä–µ
    const addButton = emptyPlaceholder.querySelector('.main-empty-add-button');
    addButton.addEventListener('click', () => {
      openModal(popupNewCard);
    });
    
    return;
  }
  
  cardsToRender.forEach((cardData) => {
    const cardElement = createCardElement(
      cardData,
      handleCardDeleteRequest, // –ü–µ—Ä–µ–¥–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ
      handleLikeCard,
      openImagePopup,
      handleUnfavoriteFromActiveTab // –ü–µ—Ä–µ–¥–∞–µ–º –Ω–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
    );
    placesList.appendChild(cardElement);
  });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–∞—Ä—Ç–æ—á–µ–∫ –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã
function renderTrashCards(trashCardsToRender) {
  placesList.innerHTML = ''; // –û—á–∏—â–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–µ—Ä–µ–¥ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–æ–º
  
  // –ï—Å–ª–∏ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä
  if (trashCardsToRender.length === 0) {
    const emptyPlaceholder = document.createElement('div');
    emptyPlaceholder.className = 'trash-empty-placeholder';
    emptyPlaceholder.innerHTML = `
      <i class="fa-regular fa-trash-can trash-empty-icon"></i>
      <p class="trash-empty-text">–ó–¥–µ—Å—å –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç</p>
    `;
    placesList.appendChild(emptyPlaceholder);
    return;
  }
  
  trashCardsToRender.forEach((cardData) => {
    const cardElement = createTrashCardElement(
      cardData,
      handleRestoreCard, // –ü–µ—Ä–µ–¥–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
      handlePermanentDeleteRequest // –ü–µ—Ä–µ–¥–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è
    );
    placesList.appendChild(cardElement);
  });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è –∫–∞—Ä—Ç–æ—á–∫–∏ –≤ –∫–æ—Ä–∑–∏–Ω—É
function moveCardToTrash(cardData) {
  // –î–æ–±–∞–≤–ª—è–µ–º –¥–∞—Ç—É —É–¥–∞–ª–µ–Ω–∏—è
  cardData.deletedAt = new Date().toISOString();
  
  // –î–æ–±–∞–≤–ª—è–µ–º –≤ –∫–æ—Ä–∑–∏–Ω—É
  trashCards.unshift(cardData);
  saveTrashCards(trashCards);
  
  // –£–¥–∞–ª—è–µ–º –∏–∑ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞
  currentCards = currentCards.filter(card => card.link !== cardData.link);
  saveCards(currentCards);
  
  console.log(`üóëÔ∏è –ö–∞—Ä—Ç–æ—á–∫–∞ "${cardData.name}" –ø–µ—Ä–µ–º–µ—â–µ–Ω–∞ –≤ –∫–æ—Ä–∑–∏–Ω—É`);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∫–∞—Ä—Ç–æ—á–∫–∏ –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã
function handleRestoreCard(cardData, cardElement) {
  // –£–¥–∞–ª—è–µ–º –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã
  trashCards = trashCards.filter(card => card.link !== cardData.link);
  saveTrashCards(trashCards);
  
  // –û—á–∏—â–∞–µ–º –¥–∞—Ç—É —É–¥–∞–ª–µ–Ω–∏—è
  delete cardData.deletedAt;
  
  // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞—Ç–Ω–æ –≤ –æ—Å–Ω–æ–≤–Ω–æ–π —Å–ø–∏—Å–æ–∫
  currentCards.unshift(cardData);
  saveCards(currentCards);
  
  // –£–¥–∞–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç –∏–∑ DOM
  cardElement.remove();
  
  // –ü–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É
  renderTrashCards(trashCards);
  
  console.log(`‚ôªÔ∏è –ö–∞—Ä—Ç–æ—á–∫–∞ "${cardData.name}" –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã`);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –æ–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è –∫–∞—Ä—Ç–æ—á–∫–∏ –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã
function handlePermanentDeleteRequest(cardData, cardElement) {
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
  window.permanentDeleteCardData = cardData;
  window.permanentDeleteCardElement = cardElement;
  
  // –û—Ç–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è
  const popupDelete = document.querySelector('.popup_type_delete');
  openModal(popupDelete);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è –∫–∞—Ä—Ç–æ—á–∫–∏ –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã
function permanentDeleteCard(cardData, cardElement) {
  // –£–¥–∞–ª—è–µ–º –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã
  trashCards = trashCards.filter(card => card.link !== cardData.link);
  saveTrashCards(trashCards);
  
  // –£–¥–∞–ª—è–µ–º –≤—Å–µ —Å–≤—è–∑–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ localStorage
  localStorage.removeItem(`likes_${cardData.link}`);
  
  // –¢–∞–∫–∂–µ —É–¥–∞–ª—è–µ–º –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ –µ—Å–ª–∏ –±—ã–ª–∞ —Ç–∞–º
  let favorites = JSON.parse(localStorage.getItem('favorites')) || [];
  const favIndex = favorites.indexOf(cardData.link);
  if (favIndex !== -1) {
    favorites.splice(favIndex, 1);
    localStorage.setItem('favorites', JSON.stringify(favorites));
  }
  
  // –£–¥–∞–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç –∏–∑ DOM
  cardElement.remove();
  
  // –ü–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É
  renderTrashCards(trashCards);
  
  console.log(`üóëÔ∏è –ö–∞—Ä—Ç–æ—á–∫–∞ "${cardData.name}" –æ–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–æ —É–¥–∞–ª–µ–Ω–∞`);
}
// –ù–∞—á–∞–ª—å–Ω—ã–π —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥ –∫–∞—Ä—Ç–æ—á–µ–∫ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω –≤–Ω—É—Ç—Ä—å DOMContentLoaded

// –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –∏–∑–±—Ä–∞–Ω–Ω–æ–º—É –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º
// const favorites = JSON.parse(localStorage.getItem('favorites')) || []; // –≠—Ç–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –∑–¥–µ—Å—å –±–æ–ª—å—à–µ –Ω–µ –Ω—É–∂–Ω–∞ –≤ —Ç–∞–∫–æ–º –≤–∏–¥–µ

const profileTabFavorites = document.querySelector('.profile-tab-favorites');
const profileTabImages = document.querySelector('.profile-tab-image');
const profileTabTrash = document.querySelector('.profile-tab-trash');

if (profileTabFavorites) {
  profileTabFavorites.addEventListener('click', () => {
    // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º –∞–∫—Ç–∏–≤–Ω—É—é –≤–∫–ª–∞–¥–∫—É
    document.querySelector('.profile-tab-image').classList.remove('active');
    document.querySelector('.profile-tab-trash').classList.remove('active');
    profileTabFavorites.classList.add('active');
    
    const favLinks = JSON.parse(localStorage.getItem('favorites')) || [];
    // –§–∏–ª—å—Ç—Ä—É–µ–º –∏–∑ currentCards
    const favoriteCards = currentCards.filter(card => favLinks.includes(card.link));
    renderCards(favoriteCards, true); // –ü–µ—Ä–µ–¥–∞–µ–º —Ñ–ª–∞–≥ isFromFavorites = true
  });
}

if (profileTabImages) {
  profileTabImages.addEventListener('click', () => {
    // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º –∞–∫—Ç–∏–≤–Ω—É—é –≤–∫–ª–∞–¥–∫—É
    document.querySelector('.profile-tab-favorites').classList.remove('active');
    document.querySelector('.profile-tab-trash').classList.remove('active');
    profileTabImages.classList.add('active');
    
    renderCards(currentCards, false, true); // –ü–µ—Ä–µ–¥–∞–µ–º —Ñ–ª–∞–≥ isMainTab = true
  });
}

if (profileTabTrash) {
  profileTabTrash.addEventListener('click', () => {
    // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º –∞–∫—Ç–∏–≤–Ω—É—é –≤–∫–ª–∞–¥–∫—É
    document.querySelector('.profile-tab-image').classList.remove('active');
    document.querySelector('.profile-tab-favorites').classList.remove('active');
    profileTabTrash.classList.add('active');
    
    renderTrashCards(trashCards); // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫–∏ –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã
  });
}
// –°–æ–±—ã—Ç–∏—è –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
profileAddButton.addEventListener("click", () => openModal(popupNewCard));
closeButtonNewCard.addEventListener("click", () => {
  // –û—á–∏—â–∞–µ–º —Ñ–æ—Ä–º—É –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏
  const newCardForm = popupNewCard.querySelector('.popup__form');
  if (newCardForm) {
    newCardForm.reset();
  }
  
  // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑—á–∏–∫–∞ —Ñ–∞–π–ª–æ–≤
  resetFileUpload('place-image-upload');
  
  closeModal(popupNewCard);
});
// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–∫—Ä—ã—Ç–∏—è –ø–æ –æ–≤–µ—Ä–ª–µ—é –¥–ª—è popupNewCard
popupNewCard.addEventListener("mousedown", (evt) => {
  if (evt.target === popupNewCard) {
    // –û—á–∏—â–∞–µ–º —Ñ–æ—Ä–º—É –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏
    const newCardForm = popupNewCard.querySelector('.popup__form');
    if (newCardForm) {
      newCardForm.reset();
    }
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑—á–∏–∫–∞ —Ñ–∞–π–ª–æ–≤
    resetFileUpload('place-image-upload');
    
    closeModal(popupNewCard);
  }
});

closeButtonAvatar.addEventListener("click", () => {
  // –û—á–∏—â–∞–µ–º —Ñ–æ—Ä–º—É –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏
  const avatarForm = popupAvatar.querySelector('.popup__form');
  if (avatarForm) {
    avatarForm.reset();
  }
  
  // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑—á–∏–∫–∞ —Ñ–∞–π–ª–æ–≤
  resetFileUpload('avatar-upload');
  
  closeModal(popupAvatar);
});
closeButtonDelete.addEventListener("click", () => closeModal(popupDelete));
if (profileImage && popupAvatar) {
  profileImage.addEventListener("click", () => {
    // –û—á–∏—â–∞–µ–º —Ñ–æ—Ä–º—É –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏
    const avatarForm = popupAvatar.querySelector('.popup__form');
    if (avatarForm) {
      avatarForm.reset();
      // –î–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É –ø–æ—Å–ª–µ —Å–±—Ä–æ—Å–∞ —Ñ–æ—Ä–º—ã
      const saveAvatarBtn = avatarForm.querySelector('.popup__button');
      if (saveAvatarBtn) {
        saveAvatarBtn.disabled = true;
        saveAvatarBtn.classList.add('disabled');
      }
    }
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑—á–∏–∫–∞ —Ñ–∞–π–ª–æ–≤
    resetFileUpload('avatar-upload');
    
    openModal(popupAvatar);
  });
}
// –°–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–µ –≤—ã–ø–∞–¥–∞—é—â–µ–µ –º–µ–Ω—é
if (burgerButton && dropdownOverlay) {
  // –û—Ç–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é
  burgerButton.addEventListener("click", (e) => {
    e.stopPropagation();
    burgerButton.classList.toggle("open");
    dropdownOverlay.classList.toggle("open");
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∫—Ä–æ–ª–ª–æ–º
    if (dropdownOverlay.classList.contains("open")) {
      lockScroll();
    } else {
      unlockScroll();
    }
  });

  // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é –ø–æ –∫–ª–∏–∫—É –Ω–∞ –∫–Ω–æ–ø–∫—É –∑–∞–∫—Ä—ã—Ç–∏—è
  if (dropdownClose) {
    dropdownClose.addEventListener("click", () => {
      closeDropdownMenu();
    });
  }

  // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é –ø–æ –∫–ª–∏–∫—É –Ω–∞ –æ–≤–µ—Ä–ª–µ–π
  dropdownOverlay.addEventListener("click", (e) => {
    if (e.target === dropdownOverlay) {
      closeDropdownMenu();
    }
  });

  // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é –ø–æ ESC
  document.addEventListener("keydown", (e) => {
    if (e.key === "Escape" && dropdownOverlay.classList.contains("open")) {
      closeDropdownMenu();
    }
  });
}

// –§—É–Ω–∫—Ü–∏—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–µ–Ω—é
function closeDropdownMenu() {
  const burgerButtonElement = document.querySelector('.navigation__button');
  const dropdownOverlayElement = document.querySelector('.dropdown-overlay');
  
  if (burgerButtonElement) {
    burgerButtonElement.classList.remove("open");
  }
  if (dropdownOverlayElement) {
    dropdownOverlayElement.classList.remove("open");
  }
  
  // –ó–∞–∫—Ä—ã–≤–∞–µ–º –ø–æ–¥–º–µ–Ω—é —Ç–µ–º—ã, –µ—Å–ª–∏ –æ–Ω–æ –µ—Å—Ç—å
  const themeSubmenu = document.querySelector(".nav-submenu-theme");
  if (themeSubmenu) {
    themeSubmenu.classList.remove("open");
  }
  
  // –ó–∞–∫—Ä—ã–≤–∞–µ–º –ø–æ–¥–º–µ–Ω—é —è–∑—ã–∫–∞, –µ—Å–ª–∏ –æ–Ω–æ –µ—Å—Ç—å
  const languageSubmenu = document.querySelector(".nav-submenu-language");
  if (languageSubmenu) {
    languageSubmenu.classList.remove("open");
  }
  
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∫—Ä–æ–ª–ª–æ–º
  if (typeof unlockScroll === 'function') {
    unlockScroll();
  }
}

// –î–µ–ª–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –≥–ª–æ–±–∞–ª—å–Ω–æ –¥–æ—Å—Ç—É–ø–Ω–æ–π
window.closeDropdownMenu = closeDropdownMenu;

// –ì–ª–æ–±–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ –ø—É—Å—Ç–æ–π –≤–∫–ª–∞–¥–∫–∏ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
window.renderEmptyFavorites = function() {
  renderCards([], true);
};

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
if (navItemProfile) {
  navItemProfile.addEventListener("click", () => {
    // –û—Ç–∫—Ä—ã–≤–∞–µ–º –ø–æ–ø–∞–ø —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è
    const profileTitle = document.querySelector(".profile__title");
    const profileDescription = document.querySelector(".profile__description");
    const nameInput = popupEditProfile.querySelector('input[name="name"]');
    const descriptionInput = popupEditProfile.querySelector('input[name="description"]');
    nameInput.value = profileTitle.textContent;
    descriptionInput.value = profileDescription.textContent;
    
    closeDropdownMenu();
    openModal(popupEditProfile);
  });
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞
const navItemStorage = document.querySelector('.nav-item-storage');
if (navItemStorage) {
  navItemStorage.addEventListener("click", () => {
    closeDropdownMenu();
    
    const currentSize = getStorageSize();
    const availableSpace = getAvailableSpace();
    
    const message = `–¢–µ–∫—É—â–µ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ${(currentSize / 1024).toFixed(1)} KB\n–î–æ—Å—Ç—É–ø–Ω–æ –º–µ—Å—Ç–∞: ${(availableSpace / 1024).toFixed(1)} KB\n\n–û—á–∏—Å—Ç–∏—Ç—å —Å—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ?`;
    
    if (confirm(message)) {
      cleanupOldData();
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
      const newSize = getStorageSize();
      const freed = currentSize - newSize;
      
      if (freed > 0) {
        alert(`–û—Å–≤–æ–±–æ–∂–¥–µ–Ω–æ ${(freed / 1024).toFixed(1)} KB –º–µ—Å—Ç–∞!`);
      } else {
        alert('–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—á–∏—Å—Ç–∫–∏.');
      }
      
      console.log(`üßπ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –û—Å–≤–æ–±–æ–∂–¥–µ–Ω–æ: ${(freed / 1024).toFixed(1)} KB`);
    }
  });
}

// –°—Ç–∞—Ä—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ profileBtn —É–¥–∞–ª–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –Ω–æ–≤—ã–π –≤ dropdown menu

// –°–æ–±—ã—Ç–∏—è –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
profileEditButton.addEventListener("click", () => {
  const profileTitle = document.querySelector(".profile__title");
  const profileDescription = document.querySelector(".profile__description");
  const nameInput = popupEditProfile.querySelector('input[name="name"]');
  const descriptionInput = popupEditProfile.querySelector('input[name="description"]');
  nameInput.value = profileTitle.textContent;
  descriptionInput.value = profileDescription.textContent;
  openModal(popupEditProfile);
});
closeButtonEditProfile.addEventListener("click", () =>
  closeModal(popupEditProfile)
);

// –§—É–Ω–∫—Ü–∏—è openImagePopup —Ç–µ–ø–µ—Ä—å –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è –∏–∑ popup-image.js

if (closeButtonImage) {
  closeButtonImage.addEventListener("click", () => closeModal(popupImage));
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º (–∑–∞–≥–æ—Ç–æ–≤–∫–∏)
const formEditProfile = popupEditProfile.querySelector(".popup__form");
if (formEditProfile) {
  formEditProfile.addEventListener("submit", (evt) => {
    evt.preventDefault();
    const nameInput = formEditProfile.querySelector('input[name="name"]');
    const descriptionInput = formEditProfile.querySelector('input[name="description"]');
    const profileTitle = document.querySelector(".profile__title");
    const profileDescription = document.querySelector(".profile__description");
    profileTitle.textContent = nameInput.value;
    profileDescription.textContent = descriptionInput.value;
    saveProfileData({
      ...loadProfileData(),
      name: nameInput.value,
      description: descriptionInput.value
    });
    closeModal(popupEditProfile);
  });
}

const formNewCard = popupNewCard.querySelector(".popup__form");
if (formNewCard) {
  formNewCard.addEventListener("submit", (evt) => {
    evt.preventDefault();

    const nameInput = formNewCard.querySelector('input[name="place-name"]');
    const name = nameInput?.value.trim();
    
    // –ü–æ–ª—É—á–∞–µ–º base64 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    const imageBase64 = getImageBase64('place-image-upload');

    if (!name || !imageBase64) {
      console.warn("–ü–æ–ª—è —Ñ–æ—Ä–º—ã –Ω–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –ø—É—Å—Ç—ã–º–∏.");
      return;
    }

    const newCardData = { name, link: imageBase64 };

    // –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –∫–∞—Ä—Ç–æ—á–∫–∏ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –≥–æ—Ç–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
    const newCardElement = createCardElement(
      newCardData,
      handleCardDeleteRequest, // –ü–µ—Ä–µ–¥–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ
      handleLikeCard,
      openImagePopup,
      handleUnfavoriteFromActiveTab // –ü–µ—Ä–µ–¥–∞–µ–º –Ω–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
    );

    // –î–æ–±–∞–≤–ª—è–µ–º –∫–∞—Ä—Ç–æ—á–∫—É –≤ –Ω–∞—á–∞–ª–æ —Å–ø–∏—Å–∫–∞
    placesList.prepend(newCardElement);
    currentCards.unshift(newCardData); // –û–±–Ω–æ–≤–ª—è–µ–º currentCards
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∫–∞—Ä—Ç–æ—á–µ–∫ –≤ localStorage
    saveCards(currentCards);

    // –ï—Å–ª–∏ –∞–∫—Ç–∏–≤–Ω–∞ –æ—Å–Ω–æ–≤–Ω–∞—è –≤–∫–ª–∞–¥–∫–∞, –ø–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º –µ—ë –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä–∞
    const isImagesTabActive = profileTabImages?.classList.contains('active');
    if (isImagesTabActive) {
      renderCards(currentCards, false, true);
    }

    closeModal(popupNewCard);
    evt.target.reset();
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑—á–∏–∫–∞ —Ñ–∞–π–ª–æ–≤
    resetFileUpload('place-image-upload');
  });
}

const formAvatar = popupAvatar.querySelector(".popup__form");
const formDelete = popupDelete.querySelector(".popup__form");
const confirmDeleteButton = popupDelete.querySelector(".popup__button-delete");
let cardLinkToDelete = null; // –¢–µ–ø–µ—Ä—å cardLinkToDelete —Ö—Ä–∞–Ω–∏—Ç —Å—Å—ã–ª–∫—É –Ω–∞ —É–¥–∞–ª—è–µ–º–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ

// –ü—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ –∏–∫–æ–Ω–∫—É —É–¥–∞–ª–µ–Ω–∏—è ‚Äî —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫–∞—Ä—Ç–æ—á–∫—É –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
placesList.addEventListener("click", (evt) => {
  if (evt.target.classList.contains("card__delete-button")) {
    const cardElement = evt.target.closest(".places__item");
    if (cardElement) {
      cardLinkToDelete = cardElement.querySelector('.card__image').src; // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
      cardToDelete = cardElement; // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–∞—Ä—Ç–æ—á–∫—É –¥–ª—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
      window.cardToDelete = cardElement; // –¢–∞–∫–∂–µ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ window –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
      handleCardDeleteRequest(cardElement);
    }
  }
});

// –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è
if (confirmDeleteButton) {
  confirmDeleteButton.addEventListener("click", () => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∫–∞–∫–æ–π —Ç–∏–ø —É–¥–∞–ª–µ–Ω–∏—è: –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã –∏–ª–∏ –æ–±—ã—á–Ω–æ–µ
    if (window.permanentDeleteCardData && window.permanentDeleteCardElement) {
      // –û–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã
      permanentDeleteCard(window.permanentDeleteCardData, window.permanentDeleteCardElement);
      
      // –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
      window.permanentDeleteCardData = null;
      window.permanentDeleteCardElement = null;
      
    } else if (window.cardToDelete) {
      // –û–±—ã—á–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ (–ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ –≤ –∫–æ—Ä–∑–∏–Ω—É)
      const cardImageElement = window.cardToDelete.querySelector('.card__image');      
      if (cardImageElement) {
        const cardLinkToDelete = cardImageElement.src;
        
        // –ù–∞—Ö–æ–¥–∏–º –¥–∞–Ω–Ω—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏
        const cardData = currentCards.find(card => card.link === cardLinkToDelete);
        if (cardData) {
          // –ü–µ—Ä–µ–º–µ—â–∞–µ–º –≤ –∫–æ—Ä–∑–∏–Ω—É –≤–º–µ—Å—Ç–æ –æ–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è
          moveCardToTrash(cardData);

          // –£–¥–∞–ª—è–µ–º –∏–∑ —Å–ø–∏—Å–∫–∞ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
          let favorites = JSON.parse(localStorage.getItem('favorites')) || [];
          const favIndex = favorites.indexOf(cardLinkToDelete);
          if (favIndex !== -1) {
            favorites.splice(favIndex, 1);
            localStorage.setItem('favorites', JSON.stringify(favorites));
          }

          // –õ–∞–π–∫–∏ –æ—Å—Ç–∞–≤–ª—è–µ–º, –æ–Ω–∏ –º–æ–≥—É—Ç –ø–æ–Ω–∞–¥–æ–±–∏—Ç—å—Å—è –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏
          // localStorage.removeItem(`likes_${cardLinkToDelete}`);
        }
      }
      
      // –£–¥–∞–ª—è–µ–º DOM-—ç–ª–µ–º–µ–Ω—Ç –∫–∞—Ä—Ç–æ—á–∫–∏
      window.cardToDelete.remove();
      window.cardToDelete = null;
      window.cardLinkToDelete = null;

      // –ó–∞–∫—Ä—ã–≤–∞–µ–º –ø–æ–ø–∞–ø –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, –µ—Å–ª–∏ –æ–Ω –æ—Ç–∫—Ä—ã—Ç
      const imagePopup = document.querySelector('.popup_type_image');
      if (imagePopup && imagePopup.classList.contains('popup_is-opened')) {
        closeModal(imagePopup);
      }

      // –ü–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º –∞–∫—Ç–∏–≤–Ω—É—é –≤–∫–ª–∞–¥–∫—É
      const isFavoritesTabActive = profileTabFavorites?.classList.contains('active');
      const isImagesTabActive = profileTabImages?.classList.contains('active');

      if (isFavoritesTabActive) {
        const currentLocalFavorites = JSON.parse(localStorage.getItem('favorites')) || [];
        const favoriteCardsToRender = currentCards.filter(card => currentLocalFavorites.includes(card.link));
        renderCards(favoriteCardsToRender, true); // –ü–µ—Ä–µ–¥–∞–µ–º —Ñ–ª–∞–≥ isFromFavorites = true
      } else if (isImagesTabActive) {
        renderCards(currentCards, false, true);
      }
    }
    closeModal(popupDelete);
  });
}
if (formAvatar) {
  formAvatar.addEventListener("submit", (evt) => {
    evt.preventDefault();

    // –ü–æ–ª—É—á–∞–µ–º base64 –∞–≤–∞—Ç–∞—Ä–∞
    const avatarBase64 = getImageBase64('avatar-upload');

    if (!avatarBase64) {
      console.warn("–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–±—Ä–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –∞–≤–∞—Ç–∞—Ä–∞.");
      return;
    }

    profileImageDiv.style.backgroundImage = `url(${avatarBase64})`;

    saveProfileData({
      ...loadProfileData(),
      avatar: avatarBase64
    });

    closeModal(popupAvatar);
    evt.target.reset();
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑—á–∏–∫–∞ —Ñ–∞–π–ª–æ–≤
    resetFileUpload('avatar-upload');
  });
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–∫—Ä—ã—Ç–∏—è –ø–æ –æ–≤–µ—Ä–ª–µ—é –¥–ª—è popupAvatar
popupAvatar.addEventListener("mousedown", (evt) => {
  if (evt.target === popupAvatar) {
    // –û—á–∏—â–∞–µ–º —Ñ–æ—Ä–º—É –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏
    const avatarForm = popupAvatar.querySelector('.popup__form');
    if (avatarForm) {
      avatarForm.reset();
    }
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑—á–∏–∫–∞ —Ñ–∞–π–ª–æ–≤
    resetFileUpload('avatar-upload');
    
    closeModal(popupAvatar);
  }
});
